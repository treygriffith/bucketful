// Generated by CoffeeScript 1.7.1
(function() {
  var fs, nconf, optimist, optionsCfg, path, _;

  path = require('path');

  fs = require('fs');

  _ = require('underscore');

  optimist = require('optimist');

  nconf = require('nconf');

  optionsCfg = require('./options');

  exports.createLoader = function(_arg) {
    var loadPlugin, userConfigPath;
    loadPlugin = _arg.loadPlugin, userConfigPath = _arg.userConfigPath;
    return function(options) {
      var argnames, configs, dns, dnsObject, dnsReq, password, shortNames, username;
      argnames = _.pluck(optionsCfg, 'name');
      shortNames = _.pick(optimist.argv, argnames);
      nconf.overrides({
        bucketful: _.extend({}, options || {}, shortNames)
      }).argv();
      configs = nconf.get('bucketful:configs') || 'package.json;config.json';
      configs.split(';').filter(function(x) {
        return x;
      }).forEach(function(file, i) {
        return nconf.file("file_" + (i + 1), file);
      });
      nconf.env('__');
      if (userConfigPath) {
        nconf.file("user", userConfigPath);
      }
      dns = nconf.get('bucketful:dns');
      if (dns) {
        dnsReq = loadPlugin(dns);
        username = nconf.get("" + dnsReq.namespace + ":username");
        password = nconf.get("" + dnsReq.namespace + ":password");
        dnsObject = {
          setCNAME: dnsReq.create(username, password).setCNAME,
          namespace: dnsReq.namespace,
          username: username,
          password: password
        };
      }
      return {
        bucket: nconf.get('bucketful:bucket'),
        key: nconf.get('bucketful:key'),
        secret: nconf.get('bucketful:secret'),
        region: nconf.get('bucketful:region'),
        index: nconf.get('bucketful:index'),
        error: nconf.get('bucketful:error'),
        source: nconf.get('bucketful:source'),
        dns: dnsObject
      };
    };
  };

}).call(this);
